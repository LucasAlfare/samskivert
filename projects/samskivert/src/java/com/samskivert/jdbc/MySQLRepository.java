//
// $Id: MySQLRepository.java,v 1.2 2001/03/01 22:59:51 mdb Exp $

package com.samskivert.jdbc;

import java.sql.*;
import java.util.Properties;

/**
 * The MySQL repository class provides functionality useful to repository
 * implementations that make use of MySQL as their underlying database.
 */
public abstract class MySQLRepository extends Repository
{
    /**
     * Constructs a MySQL repository implementation with the supplied
     * configuration properties.
     */
    public MySQLRepository (Properties props)
	throws SQLException
    {
	super(props);
    }

    /**
     * @return the most recent ID generated by an insert into an
     * AUTO_INCREMENT table.
     */
    protected int lastInsertedId ()
	throws SQLException
    {
	// we have to do this by hand. alas all is not roses.
	Statement stmt = _session.connection.createStatement();
	ResultSet rs = stmt.executeQuery("select LAST_INSERT_ID()");
	if (rs.next()) {
	    return rs.getInt(1);
	} else {
	    return -1;
	}
    }

    /**
     * Determines whether or not the supplied SQL exception originated
     * from a duplicate row error.
     *
     * @return true if the exception was thrown because a duplicate row
     * was inserted into a table that does not allow such things, false if
     * the exception is not related to duplicate rows.
     */
    protected boolean isDuplicateRowException (SQLException sqe)
    {
	String msg = sqe.getMessage();
	return (msg != null && msg.indexOf("Duplicate entry") != -1);
    }
}
